version: 2.1
# Tell CircleCI to use this workflow
jobs:
  build-tier-1:
    docker:
      - image: ncarxdev/miniconda:3.8
    environment:
      SPHINXOPTS: "-j4"
      CONDA_PREFIX: "/opt/conda"
      GO111MODULE: "on" # https://stackoverflow.com/questions/56475313/how-to-fix-go-get-warning-modules-disabled-by-go111module-auto-in-gopath-src
    steps:
      # Get our data and merge with upstream
      # - checkout
      - run:
          name: Checkout code (Shallow clone)
          # https://mmeyer2k.github.io/posts/circleci-shallow-clone-large-repo
          command: |
            # add github.com to known hosts
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            ' >> ~/.ssh/known_hosts

            # add the user ssh key and set correct perms
            umask 077
            echo "$CHECKOUT_KEY" > ~/.ssh/id_rsa
            chmod 0600 ~/.ssh/id_rsa

            # use git+ssh instead of https
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            git config --global gc.auto 0 || true

            if [ -e /root/project/.git ]
            then
              cd /root/project
              git remote set-url origin "$CIRCLE_REPOSITORY_URL" || true

            else
              mkdir -p /root/project
              cd /root/project
              # get shallow clone of single repo branch for speed purposes
              git clone --depth=1 "$CIRCLE_REPOSITORY_URL" .
              # git clone "$CIRCLE_REPOSITORY_URL" .
            fi

      - run:
          name: Install Go
          command: |
            apt update -y
            apt install golang-go -y
      - run:
          name: Install Dependencies
          command: |
            go get -u github.com/technosophos/dashing
            conda env update -n base -f environment-3.8.yaml
            conda list

      - run:
          name: Build Dash Docsets
          command: |
            export PATH=$HOME/go/bin:$PATH
            python build.py --tier tier-1
          no_output_timeout: 30m

      - store_artifacts:
          path: docsets/

      - store_artifacts:
          path: feeds/

      - persist_to_workspace:
          root: .
          paths:
            - docsets/*.tgz
            - feeds/*.xml

  build-tier-2:
    docker:
      - image: ncarxdev/miniconda:3.7
    environment:
      SPHINXOPTS: "-j4"
      CONDA_PREFIX: "/opt/conda"
    steps:
      # Get our data and merge with upstream
      # - checkout
      - run:
          name: Checkout code (Shallow clone)
          # https://mmeyer2k.github.io/posts/circleci-shallow-clone-large-repo
          command: |
            # add github.com to known hosts
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            ' >> ~/.ssh/known_hosts

            # add the user ssh key and set correct perms
            umask 077
            echo "$CHECKOUT_KEY" > ~/.ssh/id_rsa
            chmod 0600 ~/.ssh/id_rsa

            # use git+ssh instead of https
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            git config --global gc.auto 0 || true

            if [ -e /root/project/.git ]
            then
              cd /root/project
              git remote set-url origin "$CIRCLE_REPOSITORY_URL" || true

            else
              mkdir -p /root/project
              cd /root/project
              # get shallow clone of single repo branch for speed purposes
              git clone --depth=1 "$CIRCLE_REPOSITORY_URL" .
              # git clone "$CIRCLE_REPOSITORY_URL" .
            fi

      - run:
          name: Install singularity deps
          command: |
            apt-get update -y && \
            apt-get install -f -y build-essential libssl-dev uuid-dev squashfs-tools libseccomp-dev cryptsetup-bin libgpgme-dev
      - run:
          name: Install Go 1.13.4
          command: |
            wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz
            rm -rf /usr/local/go
            tar -C /usr/local -xzf go1.13.4.linux-amd64.tar.gz
            ln -s /usr/local/go/bin/go /usr/local/bin/go
      - run:
          name: Install Dependencies
          command: |
            go get -u github.com/technosophos/dashing
            conda env update -n base -f environment.yaml
            conda list

      - run:
          name: Build Dash Docsets
          command: |
            export PATH=$HOME/go/bin:$PATH
            python build.py --tier tier-2
          no_output_timeout: 30m

      - store_artifacts:
          path: docsets/

      - store_artifacts:
          path: feeds/

      - persist_to_workspace:
          root: .
          paths:
            - docsets/*.tgz
            - feeds/*.xml

  deploy:
    working_directory: ~/project/dash-docsets
    docker:
      - image: circleci/python:latest
    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
        # Add deployment key fingerprint for CircleCI to use for a push
      - add_ssh_keys:
          fingerprints:
            - "70:c1:49:27:4b:65:92:6f:c9:ed:07:43:db:a6:c0:6f"
      # Copying over built website to the live site
      - run:
          name: Copy over built docsets
          command: |
            ls -ltrh /tmp/workspace/feeds
            ls -ltrh /tmp/workspace/docsets
            rm -rf docsets && cp -r /tmp/workspace/docsets ../docsets
            rm -rf feeds && cp -r /tmp/workspace/feeds ../feeds
      - run:
          name: Change to docsets branch and replace w/ new docsets
          command: |
            cp -r ./.circleci ./images README.md ../
            git checkout docsets
            rm -rf ./* .gitignore .isort.cfg .pre-commit-config.yaml ./.circleci
            mkdir -p ./docsets ./feeds
            cp -r ../docsets/* ./docsets/
            cp -r ../feeds/* ./feeds/
            cp -r ../.circleci ../images ../README.md ./
            ls -ltrh ./docsets
            ls -ltrh ./feeds
            git status
            git remote -v
      - run:
          name: Commit results and push to docsets
          command: |
            git config --global user.email "bot@andersonbanihirwe.dev"
            git config --global user.name "Samaritan"
            git add -A
            git commit -m "Automated deploy"
            git push -f origin docsets:docsets

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * 0" # “At 00:00 on Sunday.”
          filters:
            branches:
              only:
                - master
    jobs:
      - build-tier-1:
          filters:
            branches:
              ignore: docsets
      - build-tier-2:
          filters:
            branches:
              ignore: docsets
      - deploy:
          requires:
            - build-tier-1
            - build-tier-2
          filters:
            branches:
              only:
                - master
              ignore:
                - docsets
  default:
    jobs:
      - build-tier-1:
          filters:
            branches:
              ignore: docsets
      - build-tier-2:
          filters:
            branches:
              ignore: docsets
      - deploy:
          requires:
            - build-tier-1
            - build-tier-2
          filters:
            branches:
              only:
                - master
              ignore:
                - docsets
