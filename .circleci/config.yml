version: 2
# Tell CircleCI to use this workflow
workflows:
  version: 2
  default:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - docsets
      - deploy:
          requires:
            - build
          # filters:
          #   branches:
          #     only:
          #       - docsets

jobs:
  "build":
    docker:
      - image: ncarxdev/miniconda:3.8

    steps:
      # Get our data and merge with upstream
      - checkout

      - restore_cache:
          key: deps-{{ checksum "environment.yaml" }}

      - run:
          name: Install Dependencies
          command: |
            conda env update -n base -f environment.yaml
            conda list

      - run:
          name: Build Dash Docsets
          command: |
            python build.py

      - store_artifacts:
          path: docsets/

      - persist_to_workspace:
          root: .
          paths:
            - docsets/

  "deploy":
    working_directory: ~/project/dash-docsets
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
        # Add deployment key fingerprint for CircleCI to use for a push
      - add_ssh_keys:
          fingerprints:
            - "70:c1:49:27:4b:65:92:6f:c9:ed:07:43:db:a6:c0:6f"
      # Copying over built website to the live site
      - run:
          name: Copy over built site files
          command: |
            ls -ltrh
            ls -ltrh /tmp/workspace/public
      # - run:
      #     name: Change to master branch and replace w/ new site
      #     command: |
      #       cd ~/build_dir/iotwx.github.io
      #       git checkout master
      #       cp -r /tmp/workspace/public/* ./
      #       touch ./index.html
      #       git status
      #       git remote -v
      # - run:
      #     name: Commit results and push to master
      #     command: |
      #       cd ~/build_dir/iotwx.github.io
      #       git config --global user.email "bot@iotwx.github.io"
      #       git config --global user.name "IOTWX Bot"
      #       git add -A
      #       git commit -m "Automated web deploy"
      #       git push -f origin master:master
